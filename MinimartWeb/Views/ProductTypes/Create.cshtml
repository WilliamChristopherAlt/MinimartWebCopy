@model MinimartWeb.Model.ProductType

@{
    ViewData["Title"] = "Thêm sản phẩm mới";
    var allTagsJson = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.AllTags ?? new List<string>());
}

<div class="container my-4">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0"><i class="fas fa-box-open me-2"></i>Thêm sản phẩm mới</h4>
        </div>
        <div class="card-body">
            <form asp-action="Create" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="row g-3">
                    <div class="col-md-6">
                        <label asp-for="ProductName" class="form-label fw-semibold"></label>
                        <input asp-for="ProductName" class="form-control" />
                        <span asp-validation-for="ProductName" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="ProductDescription" class="form-label fw-semibold"></label>
                        <input asp-for="ProductDescription" class="form-control" />
                        <span asp-validation-for="ProductDescription" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="CategoryID" class="form-label fw-semibold"></label>
                        <select asp-for="CategoryID" class="form-select" asp-items="ViewBag.CategoryID"></select>
                        <span asp-validation-for="CategoryID" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="SupplierID" class="form-label fw-semibold"></label>
                        <select asp-for="SupplierID" class="form-select" asp-items="ViewBag.SupplierID"></select>
                        <span asp-validation-for="SupplierID" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="MeasurementUnitID" class="form-label fw-semibold"></label>
                        <select asp-for="MeasurementUnitID" class="form-select" asp-items="ViewBag.MeasurementUnitID"></select>
                        <span asp-validation-for="MeasurementUnitID" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="Price" class="form-label fw-semibold"></label>
                        <input asp-for="Price" class="form-control" />
                        <span asp-validation-for="Price" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="StockAmount" class="form-label fw-semibold"></label>
                        <input asp-for="StockAmount" class="form-control" />
                        <span asp-validation-for="StockAmount" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="ExpirationDurationDays" class="form-label fw-semibold"></label>
                        <input asp-for="ExpirationDurationDays" class="form-control" />
                        <span asp-validation-for="ExpirationDurationDays" class="text-danger small"></span>
                    </div>

                    <div class="col-md-12">
                        <label for="ImageUpload" class="form-label fw-semibold">Ảnh sản phẩm</label>
                        <div id="drop-area" class="border border-2 border-dashed rounded p-4 text-center bg-light cursor-pointer">
                            <p class="mb-2"><i class="fas fa-image fa-2x text-muted"></i></p>
                            <p class="mb-0">Kéo ảnh vào đây hoặc click để chọn ảnh</p>
                            <input type="file" id="ImageUpload" name="ImageUpload" accept="image/*" class="d-none" />
                        </div>
                        <img id="previewImage" src="#" alt="Image Preview" class="img-fluid rounded mt-2 d-none" style="max-width: 200px;" />
                        <span asp-validation-for="ImagePath" class="text-danger small"></span>
                    </div>

                    <div class="col-md-12 position-relative">
                        <label for="tagsInput" class="form-label fw-semibold">Tags (cách nhau bởi dấu phẩy)</label>
                        <input type="text" name="tagsInput" id="tagsInput" class="form-control" placeholder="Ví dụ: fresh, fruit, red" autocomplete="off" />
                        <div id="tagSuggestions" class="dropdown-menu position-absolute w-100 mt-1"></div>
                        <span class="text-danger small">@ViewData["TagError"]</span>
                    </div>

                    <div class="col-md-6 form-check form-switch mt-3">
                        <input class="form-check-input" type="checkbox" asp-for="IsActive" role="switch" id="IsActiveSwitch" />
                        <label class="form-check-label" for="IsActiveSwitch">Hiển thị sản phẩm</label>
                    </div>
                </div>

                <div class="mt-4 d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Quay lại
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i>Lưu sản phẩm
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('ImageUpload');
        const previewImage = document.getElementById('previewImage');

        dropArea.addEventListener('click', () => fileInput.click());
        fileInput.addEventListener('change', e => {
            if (fileInput.files.length > 0) showPreview(fileInput.files[0]);
        });

        dropArea.addEventListener('dragover', e => {
            e.preventDefault();
            dropArea.classList.add('highlight');
        });

        dropArea.addEventListener('dragleave', e => {
            e.preventDefault();
            dropArea.classList.remove('highlight');
        });

        dropArea.addEventListener('drop', e => {
            e.preventDefault();
            if (e.dataTransfer.files.length > 0) {
                fileInput.files = e.dataTransfer.files;
                showPreview(e.dataTransfer.files[0]);
            }
        });

        function showPreview(file) {
            if (!file.type.startsWith('image/')) {
                alert('Chỉ được tải lên file ảnh!');
                fileInput.value = '';
                previewImage.classList.add('d-none');
                return;
            }
            const url = URL.createObjectURL(file);
            previewImage.src = url;
            previewImage.classList.remove('d-none');
        }
    </script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        const allTags = @Html.Raw(allTagsJson);
        const input = document.getElementById("tagsInput");
        const suggestionBox = document.getElementById("tagSuggestions");

        input.addEventListener("input", function () {
            const inputVal = this.value;
            const tags = inputVal.split(",").map(t => t.trim()).filter(t => t !== "");
            const currentTag = tags[tags.length - 1].toLowerCase();

            suggestionBox.innerHTML = "";
            if (!currentTag) {
                suggestionBox.classList.remove("show");
                return;
            }

            const matches = allTags.filter(tag => tag.toLowerCase().startsWith(currentTag) && !tags.includes(tag));
            if (matches.length === 0) {
                suggestionBox.classList.remove("show");
                return;
            }

            matches.forEach(tag => {
                const item = document.createElement("button");
                item.type = "button";
                item.className = "dropdown-item";
                item.textContent = tag;
                item.onclick = function () {
                    tags[tags.length - 1] = tag; // Replace current tag
                    input.value = tags.join(", ") + ", ";
                    suggestionBox.classList.remove("show");
                    input.focus();
                };
                suggestionBox.appendChild(item);
            });

            suggestionBox.classList.add("show");
        });

        document.addEventListener("click", (e) => {
            if (!suggestionBox.contains(e.target) && e.target !== input) {
                suggestionBox.classList.remove("show");
            }
        });
    </script>

    <style>
        #tagSuggestions {
            max-height: 200px;
            overflow-y: auto;
            z-index: 1050;
        }

            #tagSuggestions button {
                cursor: pointer;
            }
    </style>
    <style>
        #drop-area.highlight {
            border-color: #0d6efd;
            background-color: #e9f5ff;
        }

        .cursor-pointer {
            cursor: pointer;
        }
    </style>
}
