@model MinimartWeb.ViewModels.SearchResultsViewModel
@{
    ViewData["Title"] = $"Kết quả tìm kiếm cho '{Model.Keyword}'";
}

<div class="container mt-4">
    @if (!string.IsNullOrWhiteSpace(Model.Keyword))
    {
        <h2 class="mb-4">Kết quả tìm kiếm cho: "<strong>@Model.Keyword</strong>"</h2>
        @if (Model.SearchResults.Any())
        {
            @* SỬ DỤNG BOOTSTRAP GRID Ở ĐÂY GIỐNG NHƯ "SẢN PHẨM KHÁC" *@
            <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3">
                @foreach (var product in Model.SearchResults)
                {
                    @* ĐẢM BẢO GỌI ĐÚNG PARTIAL VIEW CHO GIAO DIỆN MONG MUỐN *@
                    <partial name="_RegularProductCard" model="product" />
                }
            </div>
        }
        else
        {
            <div class="alert alert-warning text-center" role="alert">
                Không tìm thấy sản phẩm nào khớp với từ khóa "<strong>@Model.Keyword</strong>".
            </div>
        }
        <hr class="my-5">
    }
    else
    {
        <div class="alert alert-info text-center" role="alert">
            Vui lòng nhập từ khóa vào ô tìm kiếm phía trên.
        </div>
        <hr class="my-5">
    }


    <section class="regular-products-section" id="otherProductsOnSearchPage">
        <h3 class="mb-3 h4 fw-bold">Có thể bạn cũng thích</h3>
        @if (Model.OtherProducts.Any())
        {
            <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3">
                @foreach (var product in Model.OtherProducts)
                {
                    <partial name="_RegularProductCard" model="product" />
                }
            </div>

            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Page navigation for other products" class="mt-4 d-flex justify-content-center">
                    <ul class="pagination pagination-sm">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item"><a class="page-link" asp-action="Search" asp-route-keyword="@Model.Keyword" asp-route-currentPage="@(Model.CurrentPage - 1)">« Trước</a></li>
                        }
                        else
                        {
                            <li class="page-item disabled"><span class="page-link">« Trước</span></li>
                        }
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            var pageDiff = Math.Abs(i - Model.CurrentPage);
                            var showPageLink = pageDiff < 3 || i == 1 || i == Model.TotalPages;
                            var showEllipsis = (i == 2 && Model.CurrentPage > 4) || (i == Model.TotalPages - 1 && Model.CurrentPage < Model.TotalPages - 3);
                            if (showEllipsis && pageDiff > 2)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            } // Thêm kiểm tra pageDiff
                            if (showPageLink)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")"><a class="page-link" asp-action="Search" asp-route-keyword="@Model.Keyword" asp-route-currentPage="@i">@i</a></li>
                            }
                        }
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item"><a class="page-link" asp-action="Search" asp-route-keyword="@Model.Keyword" asp-route-currentPage="@(Model.CurrentPage + 1)">Sau »</a></li>
                        }
                        else
                        {
                            <li class="page-item disabled"><span class="page-link">Sau »</span></li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <p class="text-center text-muted">Không có sản phẩm nào khác để hiển thị.</p>
        }
    </section>
</div>

@* CSS cho card sản phẩm trong phần này nên giống với CSS của _RegularProductCard trên trang chủ *@
@section Styles {
    <style>
        /* Lấy lại CSS của #regularProductsContainer từ trang chủ hoặc định nghĩa tương tự */
        /* Bạn có thể tạo một class CSS chung cho lưới sản phẩm thay vì dùng ID */
        .product-grid-layout .product-card-img-link {
            height: 180px;
        }

        .product-grid-layout .product-card-title-full {
            font-size: 1rem;
            font-weight: 600;
            color: #212529;
            margin-bottom: .3rem;
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .product-grid-layout .product-card-desc-full {
            font-size: .85rem;
            color: #6c757d;
            margin-bottom: .5rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            min-height: 2.6em;
        }

        .product-grid-layout .product-card-price-unit-full {
            font-size: .95rem;
            font-weight: 700;
            color: #212529;
            margin-bottom: .2rem;
        }

        .product-grid-layout .product-card-stock-full {
            font-size: .8rem;
            color: #198754;
            margin-bottom: .75rem;
        }

        .product-grid-layout .product-action-btn {
            font-size: .8rem;
            padding: .35rem .5rem;
        }

        /* CSS chung cho card (đã có trong _Layout.cshtml hoặc trang Home/Index.cshtml) */
        .product-card {
            border: 1px solid #eee;
            transition: all .3s ease;
            display: flex;
            flex-direction: column;
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
        }

            .product-card:hover {
                box-shadow: 0 6px 18px rgba(0,0,0,.1) !important;
                transform: translateY(-4px);
            }

        .product-card-img-link {
            display: block;
            overflow: hidden;
            border-bottom: 1px solid #f0f0f0;
            position: relative;
        }
        /* Bỏ height cố định ở đây nếu _RegularProductCard tự xử lý */
        .product-card-img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform .3s ease;
            padding: 8px;
        }

        .product-card:hover .product-card-img {
            transform: scale(1.05);
        }

        .product-card-body {
            padding: .75rem;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }

        .product-card-footer {
            margin-top: auto;
            padding-top: .5rem;
        }

        .product-card .product-action-btn i {
            margin-right: .4rem;
        }
    </style>
}