@* Khai báo model là ProductType *@
@model MinimartWeb.Model.ProductType
@* Đảm bảo namespace MinimartWeb.Model đúng *@

@{
    ViewData["Title"] = Model.ProductName + " - Chi tiết sản phẩm";
    // Hàm định dạng tiền tệ
    string FormatCurrency(decimal price) => price.ToString("N0") + "đ";
}

<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang Chủ</a></li>
        @* Optional: Breadcrumb cho Category *@
        @if (Model.Category != null)
        {
            @*<li class="breadcrumb-item"><a asp-controller="CustomerProducts" asp-action="ByCategory" asp-route-id="@Model.CategoryID">@Model.Category.CategoryName</a></li>*@
            <li class="breadcrumb-item">@Model.Category.CategoryName</li> @* Hiển thị tên Category không link nếu không có action ByCategory *@
        }
        <li class="breadcrumb-item active" aria-current="page">@Model.ProductName</li>
    </ol>
</nav>

<div class="row g-4">
    @* Cột hình ảnh sản phẩm *@
    <div class="col-lg-5 col-md-6 text-center">
        @if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            <img src="~/images/products/@Model.ImagePath" alt="@Model.ProductName" class="img-fluid rounded shadow-sm mb-3 border" style="max-height: 450px;" />
            @* TODO: Thêm gallery ảnh nhỏ hoặc zoom nếu có nhiều ảnh *@
        }
        else
        {
            <img src="~/images/placeholder.png" alt="Không có ảnh" class="img-fluid rounded shadow-sm mb-3 border" style="max-height: 450px;" />
        }
    </div>

    @* Cột thông tin sản phẩm và nút mua *@
    <div class="col-lg-7 col-md-6">
        <h1 class="h2 mb-3 fw-light">@Model.ProductName</h1>

        <div class="mb-3 pb-2 border-bottom">
            <span class="fs-3 text-danger fw-bold me-3">@FormatCurrency(Model.Price)</span>
            @* TODO: Hiển thị giá gốc và % giảm giá nếu có logic tính *@
            @* <span class="text-muted text-decoration-line-through me-2">@FormatCurrency(Model.OriginalPrice)</span> *@
            @* <span class="badge bg-danger rounded-pill">-10%</span> *@
        </div>

        <div class="mb-3">
            <span class="me-3">Tình trạng:</span>
            @if (Model.StockAmount > 0 && Model.IsActive)
            {
                <span class="badge bg-success py-2"><i class="fas fa-check me-1"></i> Còn hàng</span>
            }
            else
            {
                <span class="badge bg-secondary py-2"><i class="fas fa-times me-1"></i> Hết hàng</span>
            }
            @* TODO: Hiển thị số lượng đã bán nếu cần *@
            @* <span class="ms-3 text-muted small">(Đã bán: 123)</span> *@
        </div>


        <dl class="row mb-3 small text-muted">
            @if (Model.Category != null)
            {
                <dt class="col-sm-4">Danh mục:</dt>
                <dd class="col-sm-8">@Model.Category.CategoryName</dd>
            }
            @if (Model.Supplier != null)
            {
                <dt class="col-sm-4">Nhà cung cấp:</dt>
                <dd class="col-sm-8">@Model.Supplier.SupplierName</dd>
            }
            @if (Model.MeasurementUnit != null)
            {
                <dt class="col-sm-4">Đơn vị tính:</dt>
                <dd class="col-sm-8">@Model.MeasurementUnit.UnitName</dd>
            }
            @if (Model.ExpirationDurationDays.HasValue && Model.ExpirationDurationDays > 0)
            {
                <dt class="col-sm-4">Hạn sử dụng (từ NSX):</dt>
                <dd class="col-sm-8">@Model.ExpirationDurationDays ngày</dd>
            }
        </dl>

        <hr class="my-4">

        @* Nút Thêm vào giỏ hàng *@
        @if (Model.StockAmount > 0 && Model.IsActive)
        {
            <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-flex align-items-center">
                <input type="hidden" name="productId" value="@Model.ProductTypeID" />
                <input type="hidden" name="returnUrl" value="@(Context.Request.Path + Context.Request.QueryString.Value)"/> @* Lấy cả query string nếu có *@

                <div class="me-3">
                    <label for="quantity-@Model.ProductTypeID" class="form-label small mb-1">Số lượng:</label>
                    <div class="input-group input-group-sm" style="max-width: 120px;">
                        <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@Model.ProductTypeID, -1)">-</button>
                        <input type="number" name="quantity" id="quantity-@Model.ProductTypeID" class="form-control text-center" value="1" min="1" max="@((int)Model.StockAmount)" aria-label="Số lượng">
                        <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@Model.ProductTypeID, 1)">+</button>
                    </div>
                </div>

                <div class="align-self-end">
                    @* Đặt nút submit cùng hàng với input số lượng *@
                    <button type="submit" class="btn btn-warning">
                        <i class="fas fa-cart-plus me-1"></i> Thêm vào giỏ hàng
                    </button>
                </div>
            </form>
        }
        else
        {
            <button type="button" class="btn btn-secondary" disabled> <i class="fas fa-times-circle me-1"></i> Hết hàng</button>
        }

        <hr class="my-4">

        <div class="product-description-section">
            <h5 class="h6">Mô tả chi tiết sản phẩm</h5>
            <div class="text-muted small">@Html.Raw(Model.ProductDescription)</div>
        </div>

    </div>
</div>

@* Phần sản phẩm liên quan (nếu có) *@
@* <hr class="my-5">
<h3 class="h4 mb-3">Sản phẩm bạn có thể thích</h3>
<div class="row row-cols-2 row-cols-md-4 row-cols-lg-5 g-3">
    Render các sản phẩm liên quan ở đây (cần logic trong Controller để lấy)
</div> *@

@section Scripts {
    <script>
        // Hàm tăng giảm số lượng đơn giản
        function updateQuantity(productId, change) {
            const inputElement = document.getElementById(`quantity-${productId}`);
            if (inputElement) {
                let currentValue = parseInt(inputElement.value, 10);
                let newValue = currentValue + change;
                const max = parseInt(inputElement.max, 10);
                const min = parseInt(inputElement.min, 10);

                if (newValue >= min && newValue <= max) {
                    inputElement.value = newValue;
                } else if (newValue < min) {
                    inputElement.value = min;
                } else if (newValue > max) {
                    inputElement.value = max;
                    // Optional: Show a message or disable button further
                    // alert('Số lượng tồn kho không đủ.');
                }
            }
        }
    </script>
}